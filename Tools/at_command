at command is very useful for scheduling one time tasks.


Schedule jobs:  
$ at now + 10 minutes
at> echo "something" >> log.txt
at> <Press Ctrl+D>
job 1 at ...
$ 

$ at now + 10 minutes
at> echo "something" > /dev/pts/0       # This is your login terminal id
at> <Press Ctrl+D>
job 2 at ...
$ 


List jobs:
$ atq
$ at -l

Remove jobs:
$ atrm  3           # or other job IDs.
$ atrm  4 5 6     
$ atrm  {1..10}

Check the content of the job:
$ at -c 5

Time format:
# at 23:23
# at 10:00 AM
# at 10:00 AM Sun
# at 10:00 AM July 25
# at 10:00 AM 6/22/2015
# at 10:00 AM 6.22.2015
# at 10:00 AM next month
# at 10:00 AM tomorrow
# at 10:00 AM tomorrow

# at now + 1 minute
# at now + 10 minutes
# at now + 1 hour
# at now + 1 week
# at now + 2 weeks

Note:
Q: Why does this 'at' command not print to the standard output?
A: 
Because at does not execute commands in the context of your logged in user session. 
The idea is that you can schedule a command to run at an arbitrary time, 
then log out and the system will take care of running the command at the specified time.

Note that the manual page for at(1) specifically says:
The user will be mailed standard error and standard output from his commands, if any. 
Mail will be sent using the command /usr/sbin/sendmail.

