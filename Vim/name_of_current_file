Get the name of the current file

Register % contains the name of the current file
Register # contains the name of the alternate file. 
These registers allow the name of the current or alternate files to be displayed or inserted. 
The name, or full path, or directory containing the file can be used.

For example, in directory /abc the command vim def/my.txt would edit file /abc/def/my.txt. 
The following commands could be entered to display the information shown.

:echo @% 	def/my.txt	directory/name of file (relative to the current working directory of /abc)
:echo expand('%:t') 	my.txt	name of file ('tail')
:echo expand('%:p') 	/abc/def/my.txt	full path
:echo expand('%:p:h')	/abc/def	directory containing file ('head')
:echo expand('%:p:h:t')	def	First get the full path with :p (/abc/def/my.txt), then get the head of that with :h (/abc/def), then get the tail of that with :t (def)
:echo expand('%:r') 	def/my	name of file less one extension ('root')
:echo expand('%:e') 	txt	name of file's extension ('extension')

			:p		expand to full path
			:h		head (last path component removed)
			:t		tail (last path component only)
			:r		root (one extension removed)
			:e		extension only

For more info run :help expand

If all that is wanted is to display the name of the current file, type Ctrl-G (or press 1 then Ctrl-G for the full path).
When using @%, the name is displayed relative to the current directory.

In insert mode, type Ctrl-R then % to insert the name of the current file.
In command mode (after typing a colon), type Ctrl-R then % to insert the name of the current file. 
In normal mode, type "%p to put the name of the current file after the cursor (or "%P to insert the name before the cursor).

The following commands insert lines consisting of the full path of the current and alternate files into the buffer:
:put =expand('%:p')
:put =expand('#:p')

