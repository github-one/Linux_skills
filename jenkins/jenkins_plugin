https://wiki.jenkins.io/display/JENKINS/Plugin+tutorial#Plugintutorial-CreatingaNewPlugin

------------------------------------------- Manually install a jenkins plugin  -----------------------------------------------
Q: How to install a plugin in Jenkins manually?
A: There are two ways to install jenkins plugins.

Way 1#: (installing from Jenkins front-end)
1 Download the plugin.
2 Inside Jenkins: Manage Jenkins -> Manage Plugin -> There is a tab called "Advanced" and on that page
there is an option to upload a plugin (the extension of the file must be hpi).
Sometimes, when you download plugins file with '*.zip', then you may rename it with '*.hpi'.

Way 2#: (manually putinng the .hpi file in Jenkins home directory)
Download the plugin (*.hpi file) and put it in the following directory: <jenkinsHome>/plugins/
( <jenkinsHome> may be /var/lib/jenkins mostly)
Afterwards you will need to restart Jenkins.

There are many plugins files ending with .jpi instead of .hpi, because Jenkins renames the plugin files
during the installation from .hpi to .jpi so it's able to detect a new plugin to install over an existing one.

When you install the plugin manually (downloaded as .hpi file) it is installed with extension .hpi 
and while installing the plugin through Jenkins front-end the plugin file will be changed as .jpi.

when Jenkins boots up, the plugin "*.jpi" gets precedence over plugin "*.hpi" in case both are present. 


------------------------------------------- Develop a jenkins plugin ------------------------------------------------------
Prepare:
    Install a JDK
    Install a Maven
    $ mvn -version
    
Create a plugin:
    $ mvn -U archetype:generate -Dfilter="io.jenkins.archetypes:"
        ........
        Confirm properties configuration:
        groupId: unused
        artifactId: demo
        version: 1.0-SNAPSHOT
        package: io.jenkins.plugins.sample
        .......
    $ mv demo demo-plugin 
    $ cd demo-plugin
    $ mvn verify

Build and Run the plugin:
    $ mvn hpi:run       # Note: this will set up a Jenkins instance on http://localhost:8080/jenkins/.    
    Create a new freestyle project in Jenkins, and give it any name.
    Then add the "Say hello world" build step. 
    Enter a name, save the project, and start a new build. Navigate to the build on the UI, 
    and click Console Output to view the build log. 
    It will contain a message written by the build step that was just configured:
        ......
        Hello, Jenkins! 
        Finished: SUCCESS

Distributing a Plugin:
    $ mvn package
    This should create target/*.hpi file. 
    Other users can use Jenkins' web UI to upload this plugin to Jenkins (or place it in $JENKINS_HOME/plugins.)

Websites:    
https://jenkins.io/doc/developer/tutorial/prepare/
https://jenkins.io/doc/developer/tutorial/create/
https://jenkins.io/doc/developer/tutorial/run/
https://jenkins.io/doc/developer/tutorial/extend/
https://www.cnblogs.com/hellohello/p/8727067.html           # In Chinese

https://wiki.jenkins.io/display/JENKINS/Extend+Jenkins
https://wiki.jenkins.io/display/JENKINS/Plugin+tutorial#Plugintutorial-CreatingaNewPlugin  
https://wiki.jenkins.io/display/JENKINS/Plugin+Structure

## Advanced developer in Chinese
https://blog.csdn.net/weixin_38652136/article/details/81116455
https://www.jianshu.com/p/8c05b6191d2f
http://www.uml.org.cn/jchgj/201802073.asp

https://www.jianshu.com/p/e7b1754393cd          # For macos

https://dzone.com/articles/implementing-a-jenkins-plugin-from-scratch-in-5-st           # Simple
https://github.com/virtualramblas/publishtokafka-plugin                                 # Complicated
comments: English, step by step, intellij, 

## Actions and Release tutorial:
https://www.cnblogs.com/kingzzm/p/3321712.html
https://www.cnblogs.com/kingzzm/p/3321711.html


-------------------------  Jenkins plugin examples  -------------------------
How to change the result display?
https://code.dblock.org/2011/09/07/implementing-my-first-jenkins-plugin-ansicolor.html
https://github.com/jenkinsci/ansicolor-plugin

https://blog.csdn.net/u014249394/article/details/89969385

https://wiki.jenkins.io/display/JENKINS/testng-plugin
https://github.com/envimate/golang-coverage-report

https://github.com/jenkinsci/htmlpublisher-plugin
https://blog.csdn.net/xu19950210rou/article/details/74729296         # User report for the HTMLpublisher plugin
https://blog.csdn.net/qq_29427355/article/details/80407107

## cmetrics plugin
http://rnd-isourceb.huawei.com/Cmetric/Cmetric_Jenkins_Plugin/tree/master
http://100.112.212.172:9999/job/UTS_V1R7_CMETRICS_product_9800_Cmetrics_NW_USP/153/cmetrics/

## Jelly
https://blog.csdn.net/kittyboy0001/article/details/18710161

# coworker's blog
http://3ms.huawei.com/km/blogs/details/2630563

